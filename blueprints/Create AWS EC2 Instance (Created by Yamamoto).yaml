spec_version: 2
inputs:
  region:
    type: 'string'
    default: 'ap-northeast-1'
  agent:
    type: 'agent'
    style: 'text'
    allowed-values:
      - 'torque-hands-on-agent'
  aws_credential:
    type: 'credentials'
outputs:
  InstancePublicIP:
    value: '{{ .grains.aws_instance.outputs.InstancePublicIP }}'
    quick: false
  keypair_value:
    value: '{{ .grains.get_aws_keypair_value.outputs.keypair_value }}'
    quick: false
grains:
  aws_vpc:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-vpc.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - Cidr: '10.0.0.0/24'
        - VpcName: 'wordpress'
      outputs:
        - 'VpcId'
  aws_subnet:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-subnet.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - VpcId: '{{ .grains.aws_vpc.outputs.VpcId }}'
        - CidrBlock: '10.0.0.0/24'
        - AvailabilityZone: 'ap-northeast-1a'
        - ResourceName: 'test'
      outputs:
        - 'SubnetId'
    depends-on: 'aws_vpc'
  aws_internet_gateway:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-internet-gateway.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - VpcId: '{{ .grains.aws_vpc.outputs.VpcId }}'
      outputs:
        - 'IgwId'
    depends-on: 'aws_vpc'
  aws_route_table:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-route-table.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - VpcId: '{{ .grains.aws_vpc.outputs.VpcId }}'
        - ResourceName: 'test-rt'
      outputs:
        - 'RouteTableId'
    depends-on: 'aws_subnet,aws_vpc'
  aws_route:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-route.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - RouteTableId: '{{ .grains.aws_route_table.outputs.RouteTableId }}'
        - DestinationCidrBlock: '0.0.0.0/0'
        - GatewayId: '{{ .grains.aws_internet_gateway.outputs.IgwId }}'
      outputs:
        - 'RouteId'
    depends-on: 'aws_route_table,aws_internet_gateway'
  aws_route_table_association:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-route-table-association.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - SubnetId: '{{ .grains.aws_subnet.outputs.SubnetId }}'
        - RouteTableId: '{{ .grains.aws_route_table.outputs.RouteTableId }}'
    depends-on: 'aws_subnet,aws_route_table'
  aws_security_group:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-security-group.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - VpcId: '{{ .grains.aws_vpc.outputs.VpcId }}'
        - NamePrefix: 'test'
      outputs:
        - 'SecurityGroupId'
    depends-on: 'aws_route,aws_vpc'
  aws_security_group_egress:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-security-group-egress.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - SecurityGroupId: '{{ .grains.aws_security_group.outputs.SecurityGroupId }}'
        - CidrBlock: '0.0.0.0/0'
        - FromPort: '0'
        - ToPort: '0'
        - Protocol: '-1'
      outputs:
        - 'SecurityGroupRuleId'
    depends-on: 'aws_security_group'
  aws_security_group_ingress:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-security-group-ingress.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - SecurityGroupId: '{{ .grains.aws_security_group.outputs.SecurityGroupId }}'
        - CidrBlock: '0.0.0.0/0'
        - FromPort: '22'
        - ToPort: '22'
        - Protocol: 'tcp'
      outputs:
        - 'SecurityGroupRuleId'
    depends-on: 'aws_security_group'
  aws_keypair:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-keypair.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - KeyName: 'test'
        - KeyType: 'rsa'
        - KeyFormat: 'pem'
      outputs:
        - 'KeyPairName'
        - 'KeyFingerprint'
        - 'KeyPairId'
  get_aws_keypair_value:
    kind: 'terraform'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'Terraform/get-aws-keypair-value'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - keypair_id: '{{ .grains.aws_keypair.outputs.KeyPairId }}'
      outputs:
        - 'keypair_value'
    depends-on: 'aws_keypair'
  aws_instance:
    kind: 'cloudformation'
    spec:
      source:
        store: 'torque-hands-on'
        path: 'CloudFormation/aws-instance.yaml'
      agent:
        name: '{{ .inputs.agent }}'
      authentication:
        - '{ .inputs.aws_credential }}'
      region: '{{ .inputs.region }}'
      inputs:
        - InstanceName: 'test-ins'
        - AMI: 'ami-0b6fe957a0eb4c1b9'
        - InstanceType: 't3a.small'
        - SubnetId: '{{ .grains.aws_subnet.outputs.SubnetId }}'
        - KeyName: '{{ .grains.aws_keypair.outputs.KeyPairName }}'
        - VpcSecurityGroupId: '{{ .grains.aws_security_group.outputs.SecurityGroupId }}'
        - AssociatePublicIpAddress: 'true'
      outputs:
        - 'InstanceId'
        - 'InstancePublicIP'
        - 'InstancePrivateIp'
    depends-on: 'aws_security_group,aws_keypair,aws_subnet'
